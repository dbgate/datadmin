using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
// ***********************************************************************
// This code was generated by DatAdmin DB MODEL Plugin, please do not edit
// ***********************************************************************
using System.Data.Common;
namespace Generated
{
    public static class DbCreator
    {
        public static string DBVERSION = "1";
        private static void ExecuteNonQuery(DbConnection conn, DbTransaction tran, string sql)
        {
            using (DbCommand cmd = conn.CreateCommand())
            {
                cmd.CommandText = sql;
                cmd.Transaction = tran;
                cmd.ExecuteNonQuery();
            }
        }
        public static string GetVersion(DbConnection conn, DbTransaction tran)
        {
            try
            {
                using (DbCommand cmd = conn.CreateCommand())
                {
                    cmd.Transaction = tran;
                    cmd.CommandText = "SELECT Value FROM Variables WHERE Name=\'version\'";
                    return cmd.ExecuteScalar().ToString();
                }
            }
            catch
            {
                return null;
            }
        }
        // update to version 1
        private static void UpdateToVersion_0(DbConnection conn, DbTransaction tran)
        {
            ExecuteNonQuery(conn, tran, "CREATE TABLE \"Variables\" ( \n    \"Name\" text NOT NULL, \n    \"Value\" text NOT NULL, \n    CONSTRAINT \"PK_Variables\" PRIMARY KEY (\"Name\")\n)");
            ExecuteNonQuery(conn, tran, "CREATE TABLE \"Job\" ( \n    \"ID\" integer primary key NOT NULL, \n    \"JobFile\" text NOT NULL, \n    \"Minutes\" text NOT NULL DEFAULT \'*\', \n    \"Hours\" text NOT NULL DEFAULT \'*\', \n    \"DaysOfWeek\" text NOT NULL DEFAULT \'*\', \n    \"DaysOfMonth\" text NOT NULL DEFAULT \'*\', \n    \"Months\" text NOT NULL DEFAULT \'*\', \n    \"CreatedAt\" datetime NOT NULL\n)");
            ExecuteNonQuery(conn, tran, "CREATE TABLE \"JobExecute\" ( \n    \"ID\" integer primary key NOT NULL, \n    \"Job_ID\" integer NOT NULL, \n    \"StartedAt\" datetime NOT NULL, \n    \"FinishedAt\" datetime NULL, \n    CONSTRAINT \"FK_JobExecute_Job_ID\" FOREIGN KEY (\"Job_ID\") REFERENCES \"Job\"(\"ID\")\n)");
            ExecuteNonQuery(conn, tran, "CREATE TABLE \"JobLogEntry\" ( \n    \"ID\" integer primary key NOT NULL, \n    \"Level\" text NOT NULL, \n    \"ThreadName\" text NOT NULL, \n    \"CreatedAt\" datetime NOT NULL, \n    \"Message\" text NOT NULL, \n    \"Detail\" text NOT NULL, \n    \"JobExecute_ID\" integer NOT NULL, \n    CONSTRAINT \"FK_JobLogEntry_JobExecute_ID\" FOREIGN KEY (\"JobExecute_ID\") REFERENCES \"JobExecute\"(\"ID\")\n)");
            ExecuteNonQuery(conn, tran, "INSERT INTO \"Variables\" (\"Name\", \"Value\") VALUES (\'version\', \'0\')");
            ExecuteNonQuery(conn, tran, "UPDATE Variables SET Value=\'1\' WHERE Name=\'version\'");
        }
        public static void UpdateDb(DbConnection conn)
        {
            using (DbTransaction tran = conn.BeginTransaction())
            {
                try
                {
                    if (GetVersion(conn, tran) == null) UpdateToVersion_0(conn, tran);
                }
                catch
                {
                    tran.Rollback();
                    throw;
                }
                tran.Commit();
            }
        }
        public static void CheckVersion(DbConnection conn)
        {
            string realversion = GetVersion(conn, null);
            if (realversion != DBVERSION)
            {
                throw new Exception(String.Format("Bad version of database, code_version={0}, db_version={1}", DBVERSION, realversion));
            }
        }
    }
}
