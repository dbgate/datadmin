//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Plugin.mssql {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StdScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StdScripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Plugin.mssql.StdScripts", typeof(StdScripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET ANSI_NULLS ON
        ///GO
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///CREATE FUNCTION &lt;FunctionName&gt; 
        ///(	
        ///    @param1 int = 0,
        ///    @param2 int = 0,
        ///)
        ///RETURNS TABLE 
        ///AS
        ///RETURN 
        ///(
        ///	-- Add the SELECT statement with parameter references here
        ///	SELECT 0
        ///)
        ///GO
        ///.
        /// </summary>
        internal static string createfunction {
            get {
                return ResourceManager.GetString("createfunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE [UNIQUE] INDEX [index_name} ON [_table_name] (column1, column2).
        /// </summary>
        internal static string createindex {
            get {
                return ResourceManager.GetString("createindex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET ANSI_NULLS ON
        ///GO
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///CREATE PROCEDURE &lt;Procedure_Name&gt; 
        ///	-- Add the parameters for the stored procedure here
        ///	@param1 int = 0,
        ///	@param2 int = 0,
        ///AS
        ///BEGIN
        ///	-- SET NOCOUNT ON added to prevent extra result sets from
        ///	-- interfering with SELECT statements.
        ///	SET NOCOUNT ON;
        ///
        ///    -- Insert statements for procedure here
        ///	SELECT * FROM ...
        ///END
        ///.
        /// </summary>
        internal static string createprocedure {
            get {
                return ResourceManager.GetString("createprocedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET ANSI_NULLS ON
        ///GO
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///CREATE TRIGGER &lt;trigger_name&gt; 
        ///   ON  &lt;table_name&gt; 
        ///   AFTER &lt;INSERT|DELETE|UPDATE&gt;
        ///AS 
        ///BEGIN
        ///	-- SET NOCOUNT ON added to prevent extra result sets from
        ///	-- interfering with SELECT statements.
        ///	SET NOCOUNT ON;
        ///
        ///    -- Insert statements for trigger here
        ///
        ///END
        ///GO
        ///.
        /// </summary>
        internal static string createtrigger {
            get {
                return ResourceManager.GetString("createtrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Drop the assembly */
        ///IF EXISTS (SELECT name FROM sys.assemblies WHERE name = N&apos;#ASMNAME#&apos;)
        ///BEGIN
        ///	DECLARE @error int
        ///	SET @error = 0
        ///
        ///	/* Drop the assembly user defined aggregates, triggers, functions and procedures */
        ///	DECLARE @moduleId sysname
        ///	DECLARE @moduleName sysname
        ///	DECLARE @moduleType char(2)
        ///	DECLARE @moduleClass tinyint
        ///	DECLARE assemblyModules CURSOR FAST_FORWARD FOR
        ///		SELECT t.object_id, t.name, t.type, t.parent_class as class
        ///			FROM sys.triggers t
        ///			INNER JOIN sys.assembly_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string dropassembly {
            get {
                return ResourceManager.GetString("dropassembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select cobj.name as cntname, col.name as colname, obj.name as TABLE_NAME, usr.name as TABLE_SCHEMA from sysobjects cobj
        ///	inner join sysconstraints cnt on cobj.id=cnt.constid
        ///	inner join syscolumns col on col.colid=cnt.colid and col.id=cnt.id
        ///	inner join sysobjects obj on col.id=obj.id 
        ///	inner join sysusers usr on obj.uid=usr.uid  
        ///	where cobj.xtype=&apos;D&apos;
        ///.
        /// </summary>
        internal static string getdefaultconstraints {
            get {
                return ResourceManager.GetString("getdefaultconstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	mu.name AS MainSchema, mo.name AS MainName, mo.xtype AS MainType,
        ///	du.name AS RefSchema, do.name AS RefName, do.xtype AS RefType
        ///FROM
        ///	sysdepends d
        ///	INNER JOIN sysobjects mo ON d.id=mo.id
        ///	INNER JOIN #SCHEMAS# mu ON mo.uid=mu.#SCHEMAID#
        ///	INNER JOIN sysobjects do ON d.depid=do.id
        ///	INNER JOIN #SCHEMAS# du ON do.uid=du.#SCHEMAID#
        ///.
        /// </summary>
        internal static string getdepends {
            get {
                return ResourceManager.GetString("getdepends", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	ut.name AS TABLE_SCHEMA, ot.name AS TABLE_NAME,
        ///	i.name AS IndexName,
        ///	c.name AS ColumnName,
        ///	k.keyno AS KeyOrder
        ///FROM
        ///	sysindexkeys k -- index columns
        ///	INNER JOIN sysindexes i ON k.id=i.id AND k.indid=i.indid
        ///	INNER JOIN sysobjects ot ON ot.id=k.id
        ///	INNER JOIN #SCHEMAS# ut ON ut.#SCHEMAID#=ot.uid
        ///	INNER JOIN syscolumns c ON c.id=ot.id AND c.colid=k.colid
        ///WHERE
        ///    #RETURNALL#=1 OR (ut.name=&apos;#SCHEMA#&apos; AND ot.name=&apos;#TABLE#&apos;)
        ///AND i.name NOT IN
        /// (SELECT o2.name FROM sysobjects o2
        ///  WHER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string getindexcols {
            get {
                return ResourceManager.GetString("getindexcols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- GET indexes list script, suitable for SQL server 2000
        ///select schem.name AS TABLE_SCHEMA, o.name AS TABLE_NAME, i.name AS Name, indexproperty(o.id, i.name, &apos;IsUnique&apos;) AS IsUnique
        ///from sysobjects o join sysindexes i on i.id = o.id
        ///inner join #SCHEMAS# schem on o.uid=schem.#SCHEMAID#
        ///where i.indid between 1 and 254
        ///and objectproperty(o.id, &apos;IsUserTable&apos;) = 1
        ///and indexproperty(o.id, i.name, &apos;IsStatistics&apos;) = 0
        ///and indexproperty(o.id, i.name, &apos;IsHypothetical&apos;) = 0
        ///and i.name not in
        /// (select o.name f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string getindexes {
            get {
                return ResourceManager.GetString("getindexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- GETs all triggers, for SQL server 2000
        ///SELECT 
        ///	u.name AS SchemaName, o.name AS Name, -- full trigger name
        ///	ut.name AS TableSchema, ot.name AS TableName --, full schema name
        ///	--c.text AS Definition -- SQL definition
        ///FROM 
        ///	sysobjects o 
        ///	--INNER JOIN syscomments c ON o.id=c.id -- trigger SQL definition
        ///	INNER JOIN sysusers u ON o.uid=u.uid -- trigger schema
        ///	INNER JOIN sysobjects ot ON o.parent_obj=ot.id -- parent table
        ///	INNER JOIN #SCHEMAS# ut ON ot.uid=ut.#SCHEMAID# -- parent table schema
        ///WH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string gettriggers {
            get {
                return ResourceManager.GetString("gettriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select s.name as OBJ_NAME, u.name as OBJ_SCHEMA, c.text AS CODE_TEXT
        ///    from sysobjects s
        ///    inner join syscomments c on s.id = c.id
        ///    inner join #SCHEMAS# u on u.#SCHEMAID# = s.uid 
        ///where (#RETURNALL#=1) or (s.name = &apos;#NAME#&apos; and u.name=&apos;#SCHEMA#&apos;)
        ///order by c.colid
        ///.
        /// </summary>
        internal static string loadprogrammable {
            get {
                return ResourceManager.GetString("loadprogrammable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	u.name AS SchemaName, o.name AS Name, -- full trigger name
        ///	ut.name AS TableSchema, ot.name AS TableName --, full schema name
        ///FROM 
        ///	sysobjects o 
        ///	INNER JOIN #SCHEMAS# u ON o.uid=u.#SCHEMAID# -- trigger schema
        ///	INNER JOIN sysobjects ot ON o.parent_obj=ot.id -- parent table
        ///	INNER JOIN #SCHEMAS# ut ON ot.uid=ut.#SCHEMAID# -- parent table schema
        ///.
        /// </summary>
        internal static string loadtrigger {
            get {
                return ResourceManager.GetString("loadtrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml  version=&quot;1.0&quot;?&gt;
        ///&lt;SyntaxDefinition name=&quot;Sql_mssql&quot; extensions=&quot;.sql&quot;&gt;
        ///    &lt;Digits name=&quot;Digits&quot; bold=&quot;false&quot; italic=&quot;false&quot; color=&quot;DarkBlue&quot;/&gt;
        ///
        ///    &lt;RuleSets&gt;
        ///        &lt;RuleSet ignorecase=&quot;true&quot;&gt;
        ///            &lt;Delimiters&gt;&amp;amp;&amp;lt;&amp;gt;~!%^*()-+=|\#/{}[]:;&quot;&apos; , .?@&lt;/Delimiters&gt;
        ///        
        ///			&lt;Span name=&quot;LineComment&quot; stopateol=&quot;true&quot; bold=&quot;false&quot; italic=&quot;false&quot; color=&quot;Gray&quot; &gt;
        ///				&lt;Begin &gt;--&lt;/Begin&gt;
        ///			&lt;/Span&gt;
        ///
        ///			&lt;Span name=&quot;BlockComment&quot; stopateol=&quot;false&quot; bold=&quot;false&quot; italic=&quot;false&quot; color=&quot;Gray&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string syntax {
            get {
                return ResourceManager.GetString("syntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///isnull(X.[name], &apos;(All)&apos;) as [Table],
        ///X.[rows] AS [Rows#INT],
        ///X.[reserved] * 1024 AS [Reserved#BYTES],
        ///X.[data] * 1024 AS [Data#BYTES],
        ///X.[index_size] * 1024 AS [Index size#BYTES],
        ///X.[unused] * 1024 AS [Unused#BYTES]
        ///FROM
        ///(SELECT
        ///CAST(object_name(id) AS varchar(50)) AS [name],
        ///SUM(CASE WHEN indid &lt; 2 THEN CONVERT(bigint, [rows]) END) AS [rows],
        ///SUM(CONVERT(bigint, reserved)) * 8 AS reserved,
        ///SUM(CONVERT(bigint, dpages)) * 8 AS data,
        ///SUM(CONVERT(bigint, used) - CONVERT(bigint, dpages)) *  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tableinfo {
            get {
                return ResourceManager.GetString("tableinfo", resourceCulture);
            }
        }
    }
}
